class Solution
{
public:
    void solve(vector<vector<int>> &ans, vector<int> &temp, int sum, int t, vector<int> &candidates, int i)
    {
        if (sum == t)
        {
            ans.push_back(temp);
            return;
        }
        if (sum > t)
            return;
        for (int j = i; j < candidates.size(); j++)
        {
            if (j > i && candidates[j] == candidates[j - 1])
                continue;
            temp.push_back(candidates[j]);
            solve(ans, temp, sum, t - candidates[j], candidates, j + 1);
            temp.pop_back();
        }
    }

    vector<vector<int>> combinationSum2(vector<int> &candidates, int target)
    {
        sort(candidates.begin(), candidates.end());
        vector<vector<int>> ans;
        vector<int> v;
        int sum = 0;
        solve(ans, v, sum, target, candidates, 0);
        return ans;
    }
};
